Q1. Is the Python Standard Library included with PyInputPlus?
    No PyInputPlus is not a part of the Python Standard Library, so we need to install it using pip install pyinputplus.
    
    
Q2. Why is PyInputPlus commonly imported with import pyinputplus as pypi?
    pypi is alias of PyInputPlus. The as pypi code in the import statement saves us from typing pyinputplus each time we want to call a PyInputPlus function.

Q3. How do you distinguish between inputInt() and inputFloat()?
    inputInt() : Accepts an integer value and returns int value.
    inputFloat() : Accepts integer/floating point values and returns float values inside the program.
 Coding :   
    import pyinputplus as pyip
    pyip.inputInt()
    pyip.inputFloat()
    7.8
    '7.8' is not an integer.
    7
    9
    9.0
    
    
Q4. Using PyInputPlus, how do you ensure that the user enters a whole number between 0 and 99?
Coding : 
    pyip.inputInt(min = 0, max =99)
    777
    Number must be at maximum 99.
    66
    66
    
    
Q5. What is transferred to the keyword arguments allowRegexes and blockRegexes?
    We can also use regular expressions to specify whether an input is allowed or not. The allowRegexes and blockRegexes keyword arguments take a list of regular expression strings to determine what the PyInputPlus function will accept or reject as valid input.
Coding :
    response = pyip.inputNum(allowRegexes=[r'(I|V|X|L|C|D|M)+', r'zero']) # it allows roman letters as numbers too
    X
    
    response = pyip.inputNum(blockRegexes=[r'[02468]$'])# blocks the even numbers
    2
    This response is invalid.
    4
    This response is invalid.
    6
    This response is invalid.
    45
    
    
Q6. If a blank input is entered three times, what does inputStr(limit=3) do?
    It will throw retryLimitException exception.
    
    
Q7. If blank input is entered three times, what does inputStr(limit=3, default='hello') do?
    When you use limit keyword arguments and also pass a default keyword argument, the function returns the default value instead of raising an exception
Coding :
    response = pyip.inputStr(limit=3,default='hello')
    response
    
    Blank values are not allowed.
    
    Blank values are not allowed.
    
    Blank values are not allowed.
    'hello'

